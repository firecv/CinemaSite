@{
    ViewData["Title"] = "Rezerwacja";

    var rowCount = Model.Hall.rowcount;
    var columnCount = Model.Hall.rowsize; //last row is 2 wider
    var lastRowSize = columnCount + 2; //for that ^

    var seatsWithTickets = Model.Tickets.Where(t => t.ticket_status == 2).Select(t => t.seat_id).ToHashSet();
}

@model CinemaSite.ViewModels.RezerwacjaViewModel;

<!--will be moved to css file later-->
<style>
    #seat-grid {
        display: grid;
        grid-template-rows: repeat(@rowCount, 25px);
        grid-template-columns: repeat(@lastRowSize, 25px);
        gap: 5px;
        justify-content: center;
        align-content: center;
    }

    .seat-square {
        width: 25px;
        height: 25px;
        cursor: pointer;
    }

    .seat-square.open {
        background: #000000;
    }

    .seat-square.taken {
        background: #646464;
        cursor: not-allowed;
    }

    .seat-square.selected {
        background: #d8315b;
    }
</style>

<!--char rowLabel = (char)('A' + i - 1);
            <p>rowLabel</p>  add later-->

<div>
    <h1>@Model.Movie.title</h1>
    <div id="seat-grid">
        @for (int i = 1; i < Model.Hall.rowcount; i++)
        {

            @for (int j = 1; j <= (int)(Model.Hall.rowsize / 2); j++)
            {
                var thisSeat = Model.Seats.FirstOrDefault(s => (int)(s.rowNum - 'A' + 1) == i && s.columnNum == j); //rowNum is a char in the database
                var taken = seatsWithTickets.Contains(thisSeat.seat_id);

                <div class="seat-square @(taken ? "taken" : "open")" data-seat-id="@thisSeat.seat_id"
                    title="@j"></div>
            }

            <div style="width:20px; height:20px;"></div>
            <div style="width:20px; height:20px;"></div>

            @for (int k = (int)(Model.Hall.rowsize / 2) + 1; k <= Model.Hall.rowsize; k++)
            {
                var thisSeat = Model.Seats.FirstOrDefault(s => (int)(s.rowNum - 'A' + 1) == i && s.columnNum == k);
                var taken = seatsWithTickets.Contains(thisSeat.seat_id);

                <div class="seat-square @(taken ? "taken" : "open")" data-seat-id="@thisSeat.seat_id"
                     title="@k"></div>
            }
        }
        @for (int h = 1; h <= Model.Hall.rowsize + 2; h++)
        {
            var thisSeat = Model.Seats.FirstOrDefault(s => (int)(s.rowNum - 'A' + 1) == Model.Hall.rowcount && s.columnNum == h);
            var taken = seatsWithTickets.Contains(thisSeat.seat_id);

            <div class="seat-square @(taken ? "taken" : "open")" data-seat-id="@thisSeat.seat_id"
                 title="@h"></div>
        }
    </div>
</div>

@section Scripts {
    <script src="~/js/seat-selection.js" asp-append-version="true" defer></script>
}