@{
    ViewData["Title"] = "Rezerwacja";

    var rowCount = Model.Hall.rowcount;
    var columnCount = Model.Hall.rowsize; //last row is 2 wider
    var columnCountForGrid = columnCount + 3; //for that ^ + the labels on the left

    var seatsWithTickets = Model.Tickets.Select(t => t.seat_id).ToHashSet();

    var seatTypeDictionary = Model.SeatTypes.ToDictionary(st => st.seat_type_id, st => st.seat_type);

    var ticketTypeDictionary = Model.TicketTypes.ToDictionary(tt => tt.ticket_type_id, tt => tt.ticket_type);
}

@model CinemaSite.ViewModels.RezerwacjaViewModel;

<template id="dropdown-template">
    <select name="ticketTypesPost" class="ttDropdown">
        @foreach (var tt in Model.TicketTypes)
        {
            <option value="@tt.ticket_type_id" data-price="@tt.price">@tt.ticket_type - @((tt.price/100.0).ToString("F2"))zł</option>
        }
    </select>
</template>

@section Styles {
    <link rel="stylesheet" href="~/css/rezerwacja.css" />
}

<!--this has to stay here or the variables don't work-->
<style>
    #seat-grid {
        grid-template-rows: repeat(@rowCount, 25px);
        grid-template-columns: repeat(@columnCountForGrid, 25px);
    }
</style>

<div class="rez-flex">
    <div class="innerdiv">
        <h2>@Model.Movie.title</h2>
        <div id="seat-grid">
            @for (int i = 1; i < Model.Hall.rowcount; i++)
            {
                char rowLabel = (char)('A' + i - 1);

                <div class="row-label">
                    <p>@rowLabel</p>
                </div>

                @for (int j = 1; j <= (int)(Model.Hall.rowsize / 2); j++)
                {
                    var thisSeat = Model.Seats.FirstOrDefault(s => (int)(s.rowNum - 'A' + 1) == i && s.columnNum == j); //rowNum is a char in the database
                    
                    var taken = seatsWithTickets.Contains(thisSeat.seat_id);

                    <div class="seat-square @(taken ? "taken" : "open")"
                            data-seat-id="@thisSeat.seat_id"
                            data-row="@i"
                            data-column="@j"
                            data-seat-type="@thisSeat.seat_type_id"
                            data-seat-name="@seatTypeDictionary[thisSeat.seat_type_id]"
                            title="@j">
                        <p>@j</p>
                    </div>
                }

                <div style="width:25px; height:25px;"></div>
                <div style="width:25px; height:25px;"></div>

                @for (int k = (int)(Model.Hall.rowsize / 2) + 1; k <= Model.Hall.rowsize; k++)
                {
                    var thisSeat = Model.Seats.FirstOrDefault(s => (int)(s.rowNum - 'A' + 1) == i && s.columnNum == k);
                    var taken = seatsWithTickets.Contains(thisSeat.seat_id);
                    var seatType = thisSeat.seat_type_id;

                    <div class="seat-square @(taken ? "taken" : "open")"
                            data-seat-id="@thisSeat.seat_id"
                            data-row="@i"
                            data-column="@k"
                            data-seat-type="@thisSeat.seat_type_id"
                            data-seat-name="@seatTypeDictionary[thisSeat.seat_type_id]"
                            title="@k">
                        <p>@k</p>
                    </div>
                }
            }

            <!--last row has 2 extra seats-->

            <div class="row-label">
                <p>@((char)('A' + rowCount - 1))</p>
            </div>

            @for (int h = 1; h <= Model.Hall.rowsize + 2; h++)
            {
                var thisSeat = Model.Seats.FirstOrDefault(s => (int)(s.rowNum - 'A' + 1) == Model.Hall.rowcount && s.columnNum == h);
                var taken = seatsWithTickets.Contains(thisSeat.seat_id);

                <div class="seat-square @(taken ? "taken" : "open")"
                        data-seat-id="@thisSeat.seat_id"
                        data-row="@((int)('A' + rowCount - 1))"
                        data-column="@h"
                        data-seat-type="@thisSeat.seat_type_id"
                        data-seat-name="@seatTypeDictionary[thisSeat.seat_type_id]"
                        title="@h">
                    <p>@h</p>
                </div>
            }
        </div>
    </div>

    <div id="cart-container">
        <form id="pseudo-cart" asp-controller="Home" asp-action="RedirectCheckout" method="POST">
            <input name="screeningIdPost" type="hidden" value="@Model.Screening.screening_id" />

            <table>
                <thead>
                    <tr>
                        <th>Miejsce</th>
                        <th>Rodzaj siedzenia</th>
                        <th>Rodzaj biletu</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody id="cart-items">
                    <tr>

                    </tr>
                </tbody>
            </table>
            <p id="total"></p>

            <button class="form-button" type="submit">Potwierdź i zapłać</button>
        </form>
    </div>
</div>

@section Scripts {
    <script src="~/js/seat-selection.js" asp-append-version="true" defer></script>
}